digraph calls {
subgraph "nl.tjonahen.java" {
"nl.tjonahen.java.codereview.BuildDot" -> "nl.tjonahen.java.codereview.BuildDot" [label="process"]
"nl.tjonahen.java.codereview.BuildDot" -> "nl.tjonahen.java.codereview.files.Find" [label="find"]
"nl.tjonahen.java.codereview.BuildDot" -> "nl.tjonahen.java.codereview.javaparsing.ExtractEntryPoints" [label="extract"]
"nl.tjonahen.java.codereview.BuildDot" -> "nl.tjonahen.java.codereview.matching.ExitPointMatching" [label="addAll"]
"nl.tjonahen.java.codereview.BuildDot" -> "nl.tjonahen.java.codereview.javaparsing.ExtractTypeHierarchy" [label="extract"]
"nl.tjonahen.java.codereview.BuildDot" -> "nl.tjonahen.java.codereview.matching.TypeHierarchyMatching" [label="addAll"]
"nl.tjonahen.java.codereview.BuildDot" -> "nl.tjonahen.java.codereview.javaparsing.ExtractExitPoints" [label="extract"]
"nl.tjonahen.java.codereview.BuildDot" -> "nl.tjonahen.java.codereview.javaparsing.visitor.ExitPoint" [label="getSourceLocation"]
"nl.tjonahen.java.codereview.BuildDot" -> "nl.tjonahen.java.codereview.javaparsing.visitor.ExitPoint" [label="getType"]
"nl.tjonahen.java.codereview.BuildDot" -> "nl.tjonahen.java.codereview.javaparsing.visitor.ExitPoint" [label="getName"]
"nl.tjonahen.java.codereview.BuildDerby" -> "nl.tjonahen.java.codereview.BuildDerby" [label="process"]
"nl.tjonahen.java.codereview.BuildDerby" -> "nl.tjonahen.java.codereview.files.Find" [label="find"]
"nl.tjonahen.java.codereview.BuildDerby" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeDefiningVisitor" [label="visit"]
"nl.tjonahen.java.codereview.BuildDerby" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeDefiningVisitor" [label="getFqc"]
"nl.tjonahen.java.codereview.BuildDerby" -> "nl.tjonahen.java.codereview.javaparsing.ExtractEntryPoints" [label="extract"]
"nl.tjonahen.java.codereview.BuildDerby" -> "nl.tjonahen.java.codereview.matching.ExitPointMatching" [label="addAll"]
"nl.tjonahen.java.codereview.BuildDerby" -> "nl.tjonahen.java.codereview.javaparsing.ExtractTypeHierarchy" [label="extract"]
"nl.tjonahen.java.codereview.BuildDerby" -> "nl.tjonahen.java.codereview.matching.TypeHierarchyMatching" [label="addAll"]
"nl.tjonahen.java.codereview.BuildDerby" -> "nl.tjonahen.java.codereview.javaparsing.ExtractExitPoints" [label="extract"]
"nl.tjonahen.java.codereview.BuildDerby" -> "nl.tjonahen.java.codereview.jpa.JpaNode" [label="setId"]
"nl.tjonahen.java.codereview.Main" -> "nl.tjonahen.java.codereview.Main" [label="check"]
"nl.tjonahen.java.codereview.Main" -> "nl.tjonahen.java.codereview.files.Find" [label="find"]
"nl.tjonahen.java.codereview.Main" -> "nl.tjonahen.java.codereview.javaparsing.ExtractEntryPoints" [label="extract"]
"nl.tjonahen.java.codereview.Main" -> "nl.tjonahen.java.codereview.matching.ExitPointMatching" [label="addAll"]
"nl.tjonahen.java.codereview.Main" -> "nl.tjonahen.java.codereview.javaparsing.ExtractTypeHierarchy" [label="extract"]
"nl.tjonahen.java.codereview.Main" -> "nl.tjonahen.java.codereview.matching.TypeHierarchyMatching" [label="addAll"]
"nl.tjonahen.java.codereview.Main" -> "nl.tjonahen.java.codereview.javaparsing.ExtractExitPoints" [label="extract"]
"nl.tjonahen.java.codereview.Main" -> "nl.tjonahen.java.codereview.matching.ExitPointMatching" [label="match"]
"nl.tjonahen.java.codereview.matching.ExitPointMatching" -> "nl.tjonahen.java.codereview.javaparsing.visitor.EntryPoint" [label="getPackageName"]
"nl.tjonahen.java.codereview.matching.ExitPointMatching" -> "nl.tjonahen.java.codereview.javaparsing.visitor.EntryPoint" [label="getType"]
"nl.tjonahen.java.codereview.matching.ExitPointMatching" -> "nl.tjonahen.java.codereview.javaparsing.visitor.ExitPoint" [label="getType"]
"nl.tjonahen.java.codereview.matching.ExitPointMatching" -> "nl.tjonahen.java.codereview.javaparsing.visitor.ExitPoint" [label="getName"]
"nl.tjonahen.java.codereview.matching.ExitPointMatching" -> "nl.tjonahen.java.codereview.javaparsing.visitor.ExitPoint" [label="getParams"]
"nl.tjonahen.java.codereview.matching.TypeHierarchyMatching" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeHierarchy" [label="getType"]
"nl.tjonahen.java.codereview.matching.TypeHierarchyMatching" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeHierarchy" [label="getIsAType"]
"nl.tjonahen.java.codereview.javaparsing.ExtractExitPoints" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeDefiningVisitor" [label="visit"]
"nl.tjonahen.java.codereview.javaparsing.ExtractExitPoints" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeDefiningVisitor" [label="getFqc"]
"nl.tjonahen.java.codereview.javaparsing.ExtractExitPoints" -> "nl.tjonahen.java.codereview.javaparsing.visitor.MethodCallVisitor" [label="getMethods"]
"nl.tjonahen.java.codereview.javaparsing.visitor.TypeDefiningVisitor" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeDefiningVisitor" [label="getFqc"]
"nl.tjonahen.java.codereview.javaparsing.ExtractTypeHierarchy" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeDefiningVisitor" [label="visit"]
"nl.tjonahen.java.codereview.javaparsing.ExtractTypeHierarchy" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeDefiningVisitor" [label="getFqc"]
"nl.tjonahen.java.codereview.javaparsing.ExtractTypeHierarchy" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeHierarchyVisitor" [label="visit"]
"nl.tjonahen.java.codereview.javaparsing.ExtractTypeHierarchy" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeHierarchyVisitor" [label="getTypeHierarchy"]
"nl.tjonahen.java.codereview.javaparsing.ExtractTypeHierarchy" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeHierarchy" [label="addIsAType"]
"nl.tjonahen.java.codereview.javaparsing.ExtractEntryPoints" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeDefiningVisitor" [label="visit"]
"nl.tjonahen.java.codereview.javaparsing.ExtractEntryPoints" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeDefiningVisitor" [label="getFqc"]
"nl.tjonahen.java.codereview.javaparsing.ExtractEntryPoints" -> "nl.tjonahen.java.codereview.javaparsing.visitor.DeclaringMethodVisitor" [label="getMethods"]
"nl.tjonahen.java.codereview.BuildNeo4J" -> "nl.tjonahen.java.codereview.BuildNeo4J" [label="process"]
"nl.tjonahen.java.codereview.BuildNeo4J" -> "nl.tjonahen.java.codereview.files.Find" [label="find"]
"nl.tjonahen.java.codereview.BuildNeo4J" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeDefiningVisitor" [label="visit"]
"nl.tjonahen.java.codereview.BuildNeo4J" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeDefiningVisitor" [label="getFqc"]
"nl.tjonahen.java.codereview.BuildNeo4J" -> "nl.tjonahen.java.codereview.javaparsing.ExtractEntryPoints" [label="extract"]
"nl.tjonahen.java.codereview.BuildNeo4J" -> "nl.tjonahen.java.codereview.matching.ExitPointMatching" [label="addAll"]
"nl.tjonahen.java.codereview.BuildNeo4J" -> "nl.tjonahen.java.codereview.javaparsing.ExtractTypeHierarchy" [label="extract"]
"nl.tjonahen.java.codereview.BuildNeo4J" -> "nl.tjonahen.java.codereview.matching.TypeHierarchyMatching" [label="addAll"]
"nl.tjonahen.java.codereview.BuildNeo4J" -> "nl.tjonahen.java.codereview.javaparsing.ExtractExitPoints" [label="extract"]
"nl.tjonahen.java.codereview.BuildNeo4J" -> "nl.tjonahen.java.codereview.javaparsing.visitor.ExitPoint" [label="getType"]
"nl.tjonahen.java.codereview.BuildNeo4J" -> "nl.tjonahen.java.codereview.javaparsing.visitor.ExitPoint" [label="getSourceLocation"]
"nl.tjonahen.java.codereview.BuildNeo4J" -> "nl.tjonahen.java.codereview.javaparsing.visitor.ExitPoint" [label="getName"]
"nl.tjonahen.java.codereview.matching.TypeHierarchyMatchingTest" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeHierarchy" [label="addIsAType"]
"nl.tjonahen.java.codereview.matching.ExitPointMatchingTest" -> "nl.tjonahen.java.codereview.javaparsing.visitor.TypeHierarchy" [label="addIsAType"]
"nl.tjonahen.java.codereview.matching.ExitPointMatchingTest" -> "nl.tjonahen.java.codereview.javaparsing.ExtractEntryPoints" [label="extract"]
"nl.tjonahen.java.codereview.matching.ExitPointMatchingTest" -> "nl.tjonahen.java.codereview.javaparsing.ExtractExitPoints" [label="extract"]
"nl.tjonahen.java.codereview.matching.ExitPointMatchingTest" -> "nl.tjonahen.java.codereview.javaparsing.ExtractTypeHierarchy" [label="extract"]
"nl.tjonahen.java.codereview.javaparsing.ExtractEntryPointsTest" -> "nl.tjonahen.java.codereview.CompilationUnitFactory" [label="get"]
"nl.tjonahen.java.codereview.javaparsing.ExtractExitPointsTest" -> "nl.tjonahen.java.codereview.CompilationUnitFactory" [label="get"]
"nl.tjonahen.java.codereview.javaparsing.ExtractExitPointsTest" -> "nl.tjonahen.java.codereview.matching.ExitPointMatching" [label="addAll"]
"nl.tjonahen.java.codereview.javaparsing.ExtractTypeHierarchyTest" -> "nl.tjonahen.java.codereview.CompilationUnitFactory" [label="get"]
"nl.tjonahen.java.codereview.javaparsing.samples.MethodPrinter" -> "nl.tjonahen.java.codereview.javaparsing.samples.MethodPrinter.ImportDeclarationVisitor" [label="visit"]
"nl.tjonahen.java.codereview.javaparsing.samples.MethodPrinter.MethodVisitor" -> "nl.tjonahen.java.codereview.javaparsing.samples.MethodPrinter.ScopeType" [label="getPackageName"]
"nl.tjonahen.java.codereview.javaparsing.samples.MethodPrinter.MethodVisitor" -> "nl.tjonahen.java.codereview.javaparsing.samples.MethodPrinter.ScopeType" [label="getTypeName"]
"nl.tjonahen.java.codereview.javaparsing.samples.MethodPrinter.MethodVisitor" -> "nl.tjonahen.java.codereview.javaparsing.samples.MethodPrinter.MethodBodyVisitor" [label="visit"]
"nl.tjonahen.java.codereview.javaparsing.samples.MethodPrinter.MethodVisitor" -> "nl.tjonahen.java.codereview.javaparsing.samples.MethodPrinter.ScopeVar" [label="getType"]
"nl.tjonahen.java.codereview.javaparsing.samples.DumpASTVisitor" -> "nl.tjonahen.java.codereview.javaparsing.samples.DumpASTVisitor.SourcePrinter" [label="getSource"]
"nl.tjonahen.java.codereview.javaparsing.samples.DumpASTVisitor" -> "nl.tjonahen.java.codereview.javaparsing.samples.DumpASTVisitor.SourcePrinter" [label="print"]
"nl.tjonahen.java.codereview.javaparsing.samples.DumpASTVisitor" -> "nl.tjonahen.java.codereview.javaparsing.samples.DumpASTVisitor.SourcePrinter" [label="printLn"]
"nl.tjonahen.java.codereview.javaparsing.samples.DumpASTVisitor" -> "nl.tjonahen.java.codereview.javaparsing.samples.DumpASTVisitor.SourcePrinter" [label="indent"]
"nl.tjonahen.java.codereview.javaparsing.samples.DumpASTVisitor" -> "nl.tjonahen.java.codereview.javaparsing.samples.DumpASTVisitor.SourcePrinter" [label="unindent"]
}
}
